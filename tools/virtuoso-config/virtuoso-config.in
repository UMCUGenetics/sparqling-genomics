#!@GUILE@ --no-auto-compile
-*- scheme -*-
!#
;;; Copyright Â© 2020  Roel Janssen <roel@gnu.org>
;;;
;;; This program is free software: you can redistribute it and/or
;;; modify it under the terms of the GNU General Public License as
;;; published by the Free Software Foundation, either version 3 of
;;; the License, or (at your option) any later version.

(use-modules (ice-9 format)
             (ice-9 getopt-long)
             (ice-9 popen)
             (ice-9 rdelim)
             (ice-9 threads))

;; ---------------------------------------------------------------------------
;; COMMAND-LINE PARSING
;; ---------------------------------------------------------------------------
;;
;; The following section handles command-line arguments.
;;

(define program-options
  '((version             (single-char #\v) (value #f))
    (help                (single-char #\h) (value #f))
    (db-directory        (single-char #\d) (value #t))
    (expected-size       (single-char #\e) (value #t))))

(define (show-help)
  (for-each (lambda (line) (display line) (newline))
   '("This is virtuoso-config."
     "  --help              -h  Show this message."
     "  --version           -v  Show versioning information."
     "  --db-directory=ARG  -d  Path to the desired database location."
     "  --expected-size=ARG -e  Expected size of the database in gigabytes."))
  (exit 0))

(define (show-version)
  (display "SPARQLing-genomics @VERSION@")
  (newline)
  (exit 0))

(define %config (getopt-long (command-line) program-options))

(when (assoc-ref %config 'help)    (show-help))
(when (assoc-ref %config 'version) (show-version))

(define %prefix (if (assoc-ref %config 'db-directory)
                    (assoc-ref %config 'db-directory)
                    (getcwd)))

(define %expected-size (if (assoc-ref %config 'expected-size)
                           (assoc-ref %config 'expected-size)
                           "100"))

;; ---------------------------------------------------------------------------
;; CONFIGURATION GENERATOR
;; ---------------------------------------------------------------------------

(let* [(awk  "awk")
       (head "head")
       (threads (total-processor-count))
       (memory  (let* ((port (open-input-pipe (string-append
                                               head " -n 1 /proc/meminfo | "
                                               awk " '{ print $2 }'")))
                       (str  (read-line port)))
                  (close-pipe port)
                  (inexact->exact (floor (/ (string->number str)
                                            1024.0 1024.0)))))
       (expected-database-size (inexact->exact
                                (floor (/ (* (string->number %expected-size)
                                             1024000000 0.25) 8000))))
       (number-of-buffers      (inexact->exact
                                (floor (/ (* memory 1024000000 0.66) 8000))))
       (number-of-dirty-buffers (inexact->exact
                                 (floor (* number-of-buffers 0.25))))]
  (for-each
   (lambda (pair) (if (pair? pair)
                      (format #t "~a = ~a~%" (car pair) (cdr pair))
                      (format #t "~a~%" pair)))
   `(";; Generated by virtuoso-config."
     "[Database]"
     (DatabaseFile               . ,(string-append %prefix "/virtuoso.db"))
     (ErrorLogFile               . ,(string-append %prefix "/virtuoso.log"))
     (LockFile                   . ,(string-append %prefix "/virtuoso.lck"))
     (TransactionFile            . ,(string-append %prefix "/virtuoso.trx"))
     (xa_persistent_file         . ,(string-append %prefix "/virtuoso.pxa"))
     (ErrorLogLevel              . 7)
     (FileExtend                 . 200)
     (MaxCheckpointRemap         . ,(format #f "~a" expected-database-size))
     (TempStorage                . "TempDatabase")
     ""
     "[TempDatabase]"
     (DatabaseFile               . ,(string-append %prefix "/virtuoso-temp.db"))
     (TransactionFile            . ,(string-append %prefix "/virtuoso-temp.trx"))
     (MaxCheckpointRemap         . ,(format #f "~a" expected-database-size))
     (Striping                   . 0)
     ""
     "[Parameters]"
     (ServerPort                 . "localhost:1111")
     (MaxClientConnections       . ,(* threads 10))
     (DirsAllowed                . "/")
     (VADInstallDir              . "/share/virtuoso/vad/")
     (RdfFreeTextRulesSize       . 1000)
     (IndexTreeMaps              . 256)
     (MaxQueryMem                . ,(format #f "~aG" (inexact->exact
                                                      (floor (/ memory 2.0)))))
     (AdjustVectorSize           . 1)
     (ThreadsPerQuery            . ,threads)
     (AsyncQueueMaxThreads       . ,(inexact->exact (ceiling (* 1.5 threads))))
     (NumberOfBuffers            . ,number-of-buffers)
     (MaxDirtyBuffers            . ,number-of-dirty-buffers)
     (O_DIRECT                   . 1)
     ""
     "[HTTPServer]"
     (ServerPort                 . 8890)
     (ServerRoot                 . "/var/lib/virtuoso/vsp")
     (MaxClientConnections       . ,(* threads 10))
     (ServerThreads              . ,(* threads 10))
     (HttpPrintWarningsInOutput  . 0)
     (Charset                    . "UTF-8")
     (MaintenancePage            . "atomic.html")
     (EnabledGzipContent         . 1)
     ""
     "[VDB]"
     (ArrayOptimization          . 1)
     ""
     "[Replication]"
     (ServerEnable               . 0)
     ""
     "[Zero Config]"
     (ServerName                 . "virtuoso")
     ""
     "[URIQA]"
     (DefaultHost                . "localhost:8890")
     ""
     "[SPARQL]"
     (ExternalQuerySource        . 1)
     (ResultSetMaxRows           . "1000000000000")
     (MaxQueryCostEstimationTime . "9000000000000")
     (MaxQueryExecutionTime      . "9000000000000")
     (DefaultQuery               . "")
     (DeferInferenceRulesInit    . 0)
     ""
     "[Flags]"
     (hash_join_enable           . 2))))
